steps:
  - name: gcr.io/cloud-builders/docker
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_NAMESPACE/base:$_TAG',
           '--build-arg', 'ERLANG_PACKAGE_VERSION=$_ERLANG_PACKAGE',
           '--build-arg', 'ELIXIR_PACKAGE_VERSION=$_ELIXIR_PACKAGE',
           'elixir-base']
  - name: gcr.io/cloud-builders/docker
    args: ['tag', 'gcr.io/$PROJECT_ID/$_NAMESPACE/base:$_TAG', 'elixir-base']
  - name: gcr.io/cloud-builders/docker
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_NAMESPACE/build-tools:$_TAG', 'elixir-build-tools']
  - name: gcr.io/cloud-builders/docker
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_NAMESPACE/generate-dockerfile:$_TAG',
           '--build-arg', 'BASE_IMAGE=gcr.io/$PROJECT_ID/$_NAMESPACE/base:$_TAG',
           '--build-arg', 'BUILD_TOOLS_IMAGE=gcr.io/$PROJECT_ID/$_NAMESPACE/build-tools:$_TAG',
           'elixir-generate-dockerfile']

images:
  - gcr.io/$PROJECT_ID/$_NAMESPACE/base:$_TAG
  - gcr.io/$PROJECT_ID/$_NAMESPACE/build-tools:$_TAG
  - gcr.io/$PROJECT_ID/$_NAMESPACE/generate-dockerfile:$_TAG
