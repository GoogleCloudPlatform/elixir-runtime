steps:
  - name: 'gcr.io/cloud-builders/docker'
    args: ['pull', 'gcr.io/$PROJECT_ID/$_NAMESPACE/base:$_TAG']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['tag', 'gcr.io/$PROJECT_ID/$_NAMESPACE/base:$_TAG', 'elixir-base']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_NAMESPACE/generate-dockerfile:$_TAG',
           '--build-arg', 'debian_image=gcr.io/$PROJECT_ID/$_NAMESPACE/debian:$_TAG',
           '--build-arg', 'asdf_image=gcr.io/$PROJECT_ID/$_NAMESPACE/asdf:$_TAG',
           '--build-arg', 'builder_image=gcr.io/$PROJECT_ID/$_NAMESPACE/builder:$_TAG',
           '--build-arg', 'prebuilt_erlang_image_base=gcr.io/$PROJECT_ID/$_NAMESPACE/prebuilt/debian8/otp-',
           '--build-arg', 'prebuilt_erlang_image_tag=latest',
           '--build-arg', 'prebuilt_erlang_versions=$_PREBUILT_ERLANG_VERSIONS',
           '--build-arg', 'default_erlang_version=$_DEFAULT_ERLANG_VERSION',
           '--build-arg', 'default_elixir_version=$_DEFAULT_ELIXIR_VERSION',
           '.']

images:
  - 'gcr.io/$PROJECT_ID/$_NAMESPACE/generate-dockerfile:$_TAG'
